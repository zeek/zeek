:tocdepth: 3

base/protocols/postgresql/spicy-events.zeek
===========================================

Events generated by the PostgreSQL analyzer.


Summary
~~~~~~~
Events
######
=========================================================================== =========================================================================
:zeek:id:`PostgreSQL::authentication_ok`: :zeek:type:`event`                Event generated for backend authentication requests indicating successful
                                                                            authentication.
:zeek:id:`PostgreSQL::authentication_request`: :zeek:type:`event`           Event generated for backend authentication requests.
:zeek:id:`PostgreSQL::authentication_response`: :zeek:type:`event`          Event generated for frontend authentication responses.
:zeek:id:`PostgreSQL::backend_key_data`: :zeek:type:`event`                 Generated for a BackendKeyData message for cancellation.
:zeek:id:`PostgreSQL::data_row`: :zeek:type:`event`                         Event generated for every backend DataRow message.
:zeek:id:`PostgreSQL::error_response`: :zeek:type:`event`                   Event generated for a ErrorResponse.
:zeek:id:`PostgreSQL::error_response_identified_field`: :zeek:type:`event`  Event generated for identified field within an ErrorResponse.
:zeek:id:`PostgreSQL::not_implemented`: :zeek:type:`event`                  Event generated for not implemented messages.
:zeek:id:`PostgreSQL::notice_response`: :zeek:type:`event`                  Event generated for a NoticeResponse.
:zeek:id:`PostgreSQL::notice_response_identified_field`: :zeek:type:`event` Event generated for identified field within a NoticeResponse.
:zeek:id:`PostgreSQL::parameter_status`: :zeek:type:`event`                 Event generated for backend runtime parameter status reports.
:zeek:id:`PostgreSQL::ready_for_query`: :zeek:type:`event`                  Event generated for every backed ReadyForQuery message.
:zeek:id:`PostgreSQL::simple_query`: :zeek:type:`event`                     Event generated for every frontend SimpleQuery message.
:zeek:id:`PostgreSQL::ssl_reply`: :zeek:type:`event`                        Event generated for backend SSL reply.
:zeek:id:`PostgreSQL::ssl_request`: :zeek:type:`event`                      Event generated for frontend SSLRequest messages.
:zeek:id:`PostgreSQL::startup_message`: :zeek:type:`event`                  Event generated for a StartupMessage.
:zeek:id:`PostgreSQL::startup_parameter`: :zeek:type:`event`                Event generated for every parameter in a StartupMessage.
:zeek:id:`PostgreSQL::terminate`: :zeek:type:`event`                        Event generated For a frontend Terminate message.
=========================================================================== =========================================================================


Detailed Interface
~~~~~~~~~~~~~~~~~~
Events
######
.. zeek:id:: PostgreSQL::authentication_ok
   :source-code: base/protocols/postgresql/main.zeek 195 200

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`)

   Event generated for backend authentication requests indicating successful
   authentication.
   

   :param c: The connection.
   
   .. zeek:see:: PostgreSQL::authentication_request
   .. zeek:see:: PostgreSQL::authentication_response

.. zeek:id:: PostgreSQL::authentication_request
   :source-code: base/protocols/postgresql/main.zeek 181 193

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, identifier: :zeek:type:`count`, data: :zeek:type:`string`)

   Event generated for backend authentication requests.
   

   :param c: The connection.
   

   :param identifier: The identifier in the request.
   

   :param data: The request data, if any.
   
   .. zeek:see:: PostgreSQL::authentication_response
   .. zeek:see:: PostgreSQL::authentication_ok

.. zeek:id:: PostgreSQL::authentication_response
   :source-code: base/protocols/postgresql/spicy-events.zeek 44 44

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, data: :zeek:type:`string`)

   Event generated for frontend authentication responses.
   

   :param c: The connection.
   

   :param data: The response data, if any.
   
   .. zeek:see:: PostgreSQL::authentication_request
   .. zeek:see:: PostgreSQL::authentication_ok

.. zeek:id:: PostgreSQL::backend_key_data
   :source-code: base/protocols/postgresql/spicy-events.zeek 139 139

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, process_id: :zeek:type:`count`, secret_key: :zeek:type:`count`)

   Generated for a BackendKeyData message for cancellation.
   

   :param c: The connection.
   

   :param process_id: The process ID of the backend.
   

   :param secret_key: The secret key of the backend.

.. zeek:id:: PostgreSQL::data_row
   :source-code: base/protocols/postgresql/main.zeek 222 229

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, column_values: :zeek:type:`count`)

   Event generated for every backend DataRow message.
   

   :param c: The connection.
   

   :param column_values: The number of columns in this row.

.. zeek:id:: PostgreSQL::error_response
   :source-code: base/protocols/postgresql/main.zeek 160 179

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`)

   Event generated for a ErrorResponse.
   

   :param c: The connection.
   
   .. zeek:see:: PostgreSQL::error_response_identified_field

.. zeek:id:: PostgreSQL::error_response_identified_field
   :source-code: base/protocols/postgresql/main.zeek 143 148

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, code: :zeek:type:`string`, value: :zeek:type:`string`)

   Event generated for identified field within an ErrorResponse.
   

   :param c: The connection.
   

   :param code: The code (https://www.postgresql.org/docs/current/protocol-error-fields.html)
   

   :param value: The field value.
   
   .. zeek:see:: PostgreSQL::error_response

.. zeek:id:: PostgreSQL::not_implemented
   :source-code: base/protocols/postgresql/spicy-events.zeek 147 147

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, is_orig: :zeek:type:`bool`, typ: :zeek:type:`string`, chunk: :zeek:type:`string`)

   Event generated for not implemented messages.

.. zeek:id:: PostgreSQL::notice_response
   :source-code: base/protocols/postgresql/spicy-events.zeek 113 113

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`)

   Event generated for a NoticeResponse.
   

   :param c: The connection.
   
   .. zeek:see:: PostgreSQL::notice_response_identified_field

.. zeek:id:: PostgreSQL::notice_response_identified_field
   :source-code: base/protocols/postgresql/main.zeek 150 158

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, code: :zeek:type:`string`, value: :zeek:type:`string`)

   Event generated for identified field within a NoticeResponse.
   

   :param c: The connection.
   

   :param code: The code (https://www.postgresql.org/docs/current/protocol-error-fields.html)
   

   :param value: The field value.
   
   .. zeek:see:: PostgreSQL::notice_response

.. zeek:id:: PostgreSQL::parameter_status
   :source-code: base/protocols/postgresql/spicy-events.zeek 130 130

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, name: :zeek:type:`string`, value: :zeek:type:`string`)

   Event generated for backend runtime parameter status reports.
   

   :param c: The connection.
   

   :param name: The name of the runtime parameter.
   

   :param value: The current value of the parameter.
   

.. zeek:id:: PostgreSQL::ready_for_query
   :source-code: base/protocols/postgresql/main.zeek 231 246

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, transaction_status: :zeek:type:`string`)

   Event generated for every backed ReadyForQuery message.
   

   :param c: The connection.
   

   :param transaction_status: I (idle), T (in transaction block), E (error).

.. zeek:id:: PostgreSQL::simple_query
   :source-code: base/protocols/postgresql/main.zeek 211 220

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, query: :zeek:type:`string`)

   Event generated for every frontend SimpleQuery message.
   

   :param c: The connection.
   

   :param query: The query string.

.. zeek:id:: PostgreSQL::ssl_reply
   :source-code: base/protocols/postgresql/main.zeek 114 122

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, data: :zeek:type:`string`)

   Event generated for backend SSL reply.
   

   :param c: The connection.
   

   :param data: The server's reply: S for secure, N for unencrypted.

.. zeek:id:: PostgreSQL::ssl_request
   :source-code: base/protocols/postgresql/main.zeek 108 112

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`)

   Event generated for frontend SSLRequest messages.
   

   :param c: The connection.

.. zeek:id:: PostgreSQL::startup_message
   :source-code: base/protocols/postgresql/main.zeek 136 141

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, major: :zeek:type:`count`, minor: :zeek:type:`count`)

   Event generated for a StartupMessage.
   

   :param c: The connection.
   

   :param major: The major protocol version.
   

   :param minor: The minor protocol version.

.. zeek:id:: PostgreSQL::startup_parameter
   :source-code: base/protocols/postgresql/main.zeek 124 134

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`, name: :zeek:type:`string`, value: :zeek:type:`string`)

   Event generated for every parameter in a StartupMessage.
   

   :param c: The connection.
   

   :param name: The name of the parameter.
   

   :param value: The value of the parameter.

.. zeek:id:: PostgreSQL::terminate
   :source-code: base/protocols/postgresql/main.zeek 202 209

   :Type: :zeek:type:`event` (c: :zeek:type:`connection`)

   Event generated For a frontend Terminate message.
   

   :param c: The connection.


