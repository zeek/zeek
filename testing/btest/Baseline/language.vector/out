### BTest baseline data generated by btest-diff. Do not edit. Use "btest -U/-u" to update. Requires BTest >= 0.63.
type inference (PASS)
type inference (PASS)
type inference (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
cardinality (PASS)
zero-based indexing (PASS)
iterate over vector (PASS)
iterate over vector (PASS)
iterate over vector (PASS)
add element (PASS)
access element (PASS)
add element (PASS)
add element (PASS)
access element (PASS)
access element (PASS)
add element (PASS)
access element (PASS)
add element (PASS)
access element (PASS)
add element (PASS)
access element (PASS)
add above a hole (PASS)
in operator for non-hole (PASS)
in operator for hole (PASS)
in operator for edge (PASS)
in operator for out of range (PASS)
add element (PASS)
access element (PASS)
overwrite element (PASS)
access element (PASS)
overwrite element (PASS)
access element (PASS)
access element (PASS)
overwrite element (PASS)
access element (PASS)
overwrite element (PASS)
access element (PASS)
overwrite element (PASS)
access element (PASS)
overwrite element (PASS)
access element (PASS)
+ operator (PASS)
- operator (PASS)
* operator (PASS)
/ operator (PASS)
% operator (PASS)
+ operator [string] (PASS)
== operator [string] (PASS)
&& operator (PASS)
|| operator (PASS)
+= operator (PASS)
slicing (PASS)
slicing (PASS)
slicing (PASS)
slicing (PASS)
slicing (PASS)
slicing assignment (PASS)
slicing assignment (PASS)
slicing assignment grow (PASS)
slicing assignment shrink (PASS)
? operator (PASS)
copy of a vector with holes (PASS)
copy of a vector with trailing holes, [0, 2, 3, 77, , ], [0, 2, 3, 77, , ]
hole in vector of managed types, 5, [[a=T], [a=T], , , [a=T]]
hole in vector of managed types after replacing slice, 3, [[a=T], [a=T], ]
left shift (PASS)
right shift (PASS)
negative index (PASS)
negative index (PASS)
+= of empty vector (PASS)
+= of empty vector (PASS)
pv1 == pv2 -> [T, F] (PASS)
pv1 != pv2 -> [F, T] (PASS)
